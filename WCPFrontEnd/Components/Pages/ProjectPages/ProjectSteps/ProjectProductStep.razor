@using WCPFrontEnd.Components.Shared
@using WCPShared.Models.Entities.ProjectModels

<MudText Class="text-center" Typo="Typo.h6">Produkt</MudText>
<MudStack Spacing="4" Class="mt-4">

    <MudTextField Label="Produktlink" @bind-Value="Project.Product.Link" />
    <MudTextField Label="Billedelink" @bind-Value="Project.Product.ImgUrl" />

    <MudStack Spacing="8" Row>
        <MudTextField Label="Pains" AutoGrow @bind-Value="Project.Product.Link" />
        <MudTextField Label="Features" AutoGrow @bind-Value="Project.Product.Link" />
    </MudStack>

    <MudStack Spacing="8" Row>
        <MudTextField Label="Fokuspunkter" AutoGrow @bind-Value="Project.Product.FocusPoints" />
        <MudTextField Label="Beskrivelse" AutoGrow @bind-Value="Project.Product.Description" />
    </MudStack>

    <MudTextField Label="Brugsanvisinger" AutoGrow @bind-Value="Project.Product.HowToUse" />

    @if (Project is CreatorProject creatorProject) 
    {
        <MudStack Spacing="1">
            <MudText Typo="Typo.caption">Må creator beholde produktet?</MudText>

            <MudStack>
                <MudButton @onclick="() => creatorProject.CreatorKeepsProduct = !creatorProject.CreatorKeepsProduct" Color="@(creatorProject.CreatorKeepsProduct ? Color.Success : Color.Primary)"
                    Variant="Variant.Filled" Class="text-white rounded-lg" Spacing="0" Row Justify="Justify.FlexStart" AlignItems="AlignItems.Center">
                    <MudText>@(creatorProject.CreatorKeepsProduct ? "Ja - giv en anslået værdi" : "Nej - husk at sende returlabel med")</MudText>
                </MudButton>

                @if (creatorProject.CreatorKeepsProduct) 
                {
                    <MudTextField Label="Anslået værdi" @bind-Value="creatorProject.Product.Value" Required RequiredError="Dette felt er påkrævet" />
                }
            </MudStack>
            
        </MudStack>
    }
    
</MudStack> 

@code {
    [Parameter]
    public Project Project
    {
        get { return _project; }
        set
        {
            if (_project == value) return;

            _project = value;
            ProjectChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public EventCallback<Project> ProjectChanged { get; set; }
    private Project _project;
}
