@using Microsoft.EntityFrameworkCore
@using WCPAdminFrontEnd.Services
@using WCPFrontEnd.Services
@using WCPShared.Interfaces
@using WCPShared.Interfaces.Auth
@using WCPShared.Models.DTOs
@using WCPShared.Models.Entities.AuthModels
@using WCPShared.Models.Entities.UserModels
@using WCPShared.Models.Enums
@using WCPShared.Models.Views
@using WCPShared.Models.Entities
@using WCPShared.Services
@using WCPShared.Services.EntityFramework
@inject IWcpDbContext Context
@inject BrandService BrandService

<MudDialog TitleClass="!p-0">
    <TitleContent>
        <MudStack Spacing="0" Class="pt-4 px-4 pb-2">
            <span class="font-medium text-xl">@Brand.Name</span>
            <span class="text-neutral-400 text-lg">@Brand.Organization.Name</span>
        </MudStack>
        <MudDivider />
    </TitleContent>
    <DialogContent>
        
        <MudGrid>
            <AuthorizeView Roles="Admin">
                <MudItem xs="12">
                    <MudForm @ref="_form" @bind-IsValid="@_success" @bind-Errors="@_errors">
                        <MudStack Row Class="w-full">
                            <MudStack Spacing="0" Class="w-full">
                                <span class="text-neutral-400 text-[14px]">Navn</span>
                                <MudTextField T="string" Variant="Variant.Outlined" @bind-Value="Brand.Name" Required="true" Validation="@(new Func<string, string>(ValidationHelpers.NameValidation))" RequiredError="Dette felt er påkrævet" />
                            </MudStack>
                            <MudStack Spacing="0" Class="w-full">
                                <span class="text-neutral-400 text-[14px]">URL</span>
                                <MudTextField T="string" Variant="Variant.Outlined" @bind-Value="Brand.URL" Required="true" Validation="@(new Func<string, string>(ValidationHelpers.URLValidation))" RequiredError="Dette felt er påkrævet" />
                            </MudStack>
                        </MudStack>
                    </MudForm>
                </MudItem>
            </AuthorizeView>
            <AuthorizeView Roles="Creator,Bruger">
                <MudItem xs="6">
                    <MudStack Spacing="0">
                        <span class="text-neutral-400 text-[14px]">Navn</span>
                        <span class="text-nowrap text-ellipsis overflow-hidden">@Brand.Name</span>
                    </MudStack>
                </MudItem>
                <MudItem xs="6">
                    <MudStack Spacing="0">
                        <span class="text-neutral-400 text-[14px]">URL</span>
                        <span class="text-nowrap text-ellipsis overflow-hidden">@Brand.URL</span>
                    </MudStack>
                </MudItem>
            </AuthorizeView>

            <MudItem xs="4">
                <MudStack Spacing="0">
                    <span class="text-neutral-400 text-[14px]">Projekter</span>
                    <span class="text-nowrap text-ellipsis overflow-hidden bg-success-50 w-fit rounded-xl border border-success-500 px-2 text-success-400">@Brand.Projects.Count()</span>
                </MudStack>
            </MudItem>
            <MudItem xs="4">
                <MudStack Spacing="0">
                    <span class="text-neutral-400 text-[14px]">Aktive projekter</span>
                    <span class="text-nowrap text-ellipsis overflow-hidden bg-success-50 w-fit rounded-xl border border-success-500 px-2 text-success-400">@Brand.Projects.Where(x => x.Status != ProjectStatus.Cancelled && x.Status != ProjectStatus.Finished).Count()</span>
                </MudStack>
            </MudItem>
            <MudItem xs="4">
                <MudStack Spacing="0">
                    <span class="text-neutral-400 text-[14px]">Produkter</span>
                    <span class="text-nowrap text-ellipsis overflow-hidden bg-violet-50 w-fit rounded-xl border border-violet-500 px-2 text-violet-400">@Brand.Products.Count()</span>
                </MudStack>
            </MudItem>
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Luk</MudButton>
        <AuthorizeView Roles="Admin">
            <MudButton Color="@Color.Success" Variant="Variant.Filled" Disabled="@(!_success)" OnClick="Submit">Gem</MudButton>
        </AuthorizeView>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public Brand Brand { get; set; }

    private MudForm _form;
    private bool _success;
    private string[] _errors = { };

    private async Task Submit()
    {
        if (Brand.Validate())
        {
            await BrandService.UpdateObject(Brand.Id, Brand);
        }

        MudDialog.Close(DialogResult.Ok(true));
    }

    private void Cancel() => MudDialog.Cancel();
}