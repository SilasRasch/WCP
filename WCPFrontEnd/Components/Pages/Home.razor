@page "/"
@using Microsoft.EntityFrameworkCore
@using WCPAdminFrontEnd.Services
@using WCPShared.Interfaces
@using WCPShared.Models.Entities
@inject IWcpDbContext Context

<PageTitle>WebContent Platform</PageTitle>

<AuthorizeView>
    <NotAuthorized>
    </NotAuthorized>
    <Authorized>
        <MudStack>
            <MudPaper Class="pa-4">
                <MudText Typo="Typo.body1">Hej, <b>@context.User.Identity!.Name.Split(' ').First()</b>! 👋</MudText>
            </MudPaper>


            @if (data is not null)
            {
                <MudStack Row>
                    <MudPaper Class="pa-4" Width="25%">
                        <MudText Typo="Typo.caption">Antal projekter i alt</MudText>
                        <MudText Typo="Typo.h1">@projects.Count</MudText>
                    </MudPaper>
                    <MudPaper Class="pa-4" Width="25%">
                        <MudText Typo="Typo.caption">Projekter denne måned</MudText>
                        <MudText Typo="Typo.h1">@projects.Where(x => x.Created.Month == DateTime.Now.Month).Count()</MudText>
                    </MudPaper>
                    <MudPaper Class="pa-4" Width="25%">
                        <MudText Typo="Typo.caption">Projekter sidste måned</MudText>
                        <MudText Typo="Typo.h1">@projects.Where(x => x.Created.Month == DateTime.Now.AddMonths(-1).Month).Count()</MudText>
                    </MudPaper>
                    <MudPaper Class="pa-4" Width="25%">
                        <MudText Typo="Typo.caption">Ventende projekter</MudText>
                        <MudText Typo="Typo.h1">@projects.Where(x => x.Status == 0 || x.Status == 1 || x.Status == 5).Count()</MudText>
                    </MudPaper>
                    <MudPaper Class="pa-4" Width="25%">
                        <MudText Typo="Typo.caption">Antal videoer i alt</MudText>
                        <MudText Typo="Typo.h1">@projects.Sum(x => x.ContentCount)</MudText>
                    </MudPaper>
                </MudStack>
                <MudStack Spacing="0">
                    <MudText Typo="Typo.h6">Nyeste projekter</MudText>
                    <MudDataGrid Items="@projects.TakeLast(5).OrderByDescending(x => x.Created)">
                        <Columns>
                            <PropertyColumn Property="x => x.ProjectName" Title="Navn" />
                            <PropertyColumn Context="prop" Property="x => x.Brand" Title="Brand">
                                <CellTemplate>
                                    <MudStack Row="true" Spacing="2" AlignItems="AlignItems.Center">
                                        <MudText Typo="Typo.h6">@ProjectHelper.CountryStringToFlag(prop.Item.Brand.Organization.Language.Name) </MudText>
                                        @prop.Item.Brand.Name (@prop.Item.Brand.Organization.Name)
                                    </MudStack>
                                </CellTemplate>
                            </PropertyColumn>
                            <PropertyColumn Property="x => x.ProjectType" Title="Type" />
                            <PropertyColumn Context="prop" Property="x => x.Created" Title="Oprettet">
                                <CellTemplate>
                                    @prop.Item.Created
                                </CellTemplate>
                            </PropertyColumn>
                            <PropertyColumn Context="prop" Property="x => x.Status" Title="Status" CellClass="cursor-pointer">
                                <CellTemplate>
                                    <div class="@ProjectHelper.GetStatusColor(prop.Item.Status)">
                                        @ProjectHelper.GetStatusString(prop.Item.Status)
                                    </div>
                                </CellTemplate>
                            </PropertyColumn>
                        </Columns>
                    </MudDataGrid>
                </MudStack>
            }

            <MudStack Row="true" AlignItems="AlignItems.End">
                @if (data is not null)
                {
                    <MudStack Spacing="0">
                        <MudText Typo="Typo.h6">Fordeling af projekt-typer</MudText>
                        <MudPaper Class="pa-4">
                            <MudChart ChartType="ChartType.Donut" Width="300px" Height="300px" @bind-SelectedIndex="Index" InputData="@data" InputLabels="@labels">
                                <CustomGraphics>
                                    <text class="donut-inner-text" x="50%" y="45%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="2">Total</text>
                                    <text class="donut-inner-text" x="50%" y="55%" dominant-baseline="middle" text-anchor="middle" fill="black" font-family="Helvetica" font-size="5">@data.Sum().ToString()</text>
                                </CustomGraphics>
                            </MudChart>
                        </MudPaper>
                    </MudStack>

                    <MudStack Spacing="0">
                        <MudPaper Class="pa-4">
                            <MudChart ChartOptions="@(new ChartOptions { ShowLegend = false })" ChartType="ChartType.Bar" ChartSeries="@Series" XAxisLabels="@XAxisLabels" Width="100%" Height="354px">

                            </MudChart>
                        </MudPaper>
                    </MudStack>
                }
                else
                {
                    <div class="flex flex-col gap-2 w-full">
                        <MudPaper Width="100%" Class="pa-4">
                            <MudStack Spacing="0">
                                <MudSkeleton Width="100%" Height="64px" />
                                <MudSkeleton Width="100%" Height="64px" />
                                <MudSkeleton Width="100%" Height="64px" />
                                <MudSkeleton Width="100%" Height="64px" />
                                <MudSkeleton Width="100%" Height="64px" />
                                <MudSkeleton Width="100%" Height="64px" />
                            </MudStack>
                        </MudPaper>
                        
                        <MudStack Row="true">
                            <MudPaper Class="pa-4">
                                <MudSkeleton SkeletonType="SkeletonType.Circle" Width="300px" Height="300px" />
                            </MudPaper>
                            <MudPaper Class="pa-4">
                                <MudSkeleton Height="300px" Width="650px" />
                            </MudPaper>
                        </MudStack>
                    </div>
                }
            </MudStack>
        </MudStack>
    </Authorized>
</AuthorizeView>

@code {
    protected override async Task OnInitializedAsync() 
    {
        projects = await Context.Orders
            .Include(x => x.Brand)
            .ThenInclude(x => x.Organization)
            .ThenInclude(x => x.Language)
            .Where(x => x.Status != -1)
            .AsSplitQuery()
            .ToListAsync();

        int ugcCount = projects.Where(x => x.ProjectType == "UGC").ToList().Count;
        int staticCount = projects.Where(x => x.ProjectType == "Statics").ToList().Count;
        int editCount = projects.Where(x => x.ProjectType == "Edit").ToList().Count;
        int otherCount = projects.Where(x => x.ProjectType != "UGC" && x.ProjectType != "Statics" && x.ProjectType != "Edit").ToList().Count;

        data = [ugcCount, editCount, staticCount, otherCount];
        Series.Add(new ChartSeries() { Data = data });
    }
    private List<Order> projects = [];

    private int Index = -1; //default value cannot be 0 -> first selectedindex is 0.
    int dataSize = 4;
    public double[] data;
    public string[] labels = { "UGC","Edit", "Statics", "Andet" };
    public List<ChartSeries> Series = new List<ChartSeries>();
    public string[] XAxisLabels = { "UGC", "Edit", "Statics", "Andet" };
}