@page "/payout"
@using System.Security.Claims
@using Microsoft.EntityFrameworkCore
@using Stripe
@using WCPAdminFrontEnd.Services
@using WCPShared.Interfaces
@using WCPShared.Models.Entities.UserModels
@using WCPShared.Services
@inject StripeService StripeService
@inject IWcpDbContext Context
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject StripeService StripeService
@attribute [Authorize(Roles = "Creator")]

<MudPaper Class="pa-4 grid justify-center">
    <MudText Class="text-center mb-2" Typo="Typo.h6">Creator udbetaling</MudText>

    <div class="grid justify-center">
        <MudPaper MinWidth="450px" Class="mud-secondary pa-4">
            <MudStack Row Spacing="8" AlignItems="AlignItems.Start" Justify="Justify.SpaceAround">
                <MudStack Spacing="0" AlignItems="AlignItems.Center">
                    <MudText>Til udbetaling</MudText>
                    @if (Balance is not null) 
                    {
                        @foreach (var balance in Balance.Available)
                        {
                            <MudStack Row Spacing="0" AlignItems="AlignItems.Center">
                                <MudIcon Color="Color.Success" Size="Size.Large" Icon="@Icons.Material.Filled.AttachMoney" />
                                <MudText Typo="Typo.h6">@(balance.Amount / 100.0) @balance.Currency.ToUpper()</MudText>
                            </MudStack>
                        }
                    }
                    else 
                    {
                        <MudProgressCircular Class="mt-2" Color="Color.Default" Size="Size.Small" Indeterminate="true" />
                    }
                </MudStack>
                <MudStack Spacing="0" AlignItems="AlignItems.Center">
                    <MudText>Udbetalingsplan</MudText>
                    <MudStack Row Spacing="2" AlignItems="AlignItems.Center">
                        <MudIcon Size="Size.Large" Icon="@Icons.Material.Filled.Schedule" />

                        @if (Account is not null) 
                        {
                            @if (Account.Settings.Payouts.Schedule.Interval == "monthly") 
                            {
                                <MudText Typo="Typo.h6">Månedligt</MudText>
                            }
                            if (Account.Settings.Payouts.Schedule.Interval == "weekly") 
                            {
                                <MudText Typo="Typo.h6">Ugentligt</MudText>
                            }
                            if (Account.Settings.Payouts.Schedule.Interval == "daily")
                            {
                                <MudText Typo="Typo.h6">Dagligt</MudText>
                            }
                        }

                    </MudStack>
                </MudStack>
                <MudStack Spacing="0" AlignItems="AlignItems.Center">
                    <MudText>Næste udbetaling</MudText>
                    <MudStack Row Spacing="2" AlignItems="AlignItems.Center">
                        <MudIcon Size="Size.Large" Icon="@Icons.Material.Filled.CalendarMonth" />
                        <MudText Typo="Typo.h6">01/@DateTime.Now.AddMonths(1).Month/@DateTime.Now.AddMonths(1).Year</MudText>
                    </MudStack>
                </MudStack>
            </MudStack>
        </MudPaper>
    </div>


    @if (Creator is not null)
    {
        <div class="my-4">
            <AuthorizeView Policy="IsNotStripeConnected">
                <Authorized>
                    <MudText Class="text-center">
                        Det ser ikke ud til at du har gennemgået vores Stripe onboarding... Tryk <a><u>her</u></a> for at komme i gang med det!
                    </MudText>
                </Authorized>
                <NotAuthorized>
                    <MudStack Spacing="0">
                        <MudText Class="text-center" Typo="Typo.caption"><i>* Du kan minimum få udbetalt 20 DKK</i></MudText>
                        <MudText Class="text-center" Typo="Typo.caption"><i>* Der kan gå op til 7 dage før beløbet ankommer på din konto</i></MudText>
                    </MudStack>

                    @* <MudStack AlignItems="AlignItems.Center" Justify="Justify.Center">
                        @if (!PayoutConfirmed || Payout is null) 
                        {
                            <MudStack Row Spacing="1" AlignItems="AlignItems.End" Justify="Justify.Center">
                                <MudButton OnClick="@(() => PayoutAmount = 200)" Color="Color.Warning">Min</MudButton>
                                <MudNumericField Min="200" Max="Balance" @bind-Value="PayoutAmount" InputType="InputType.Number" Label="Beløb" />
                                <MudButton OnClick="@(() => PayoutAmount = Balance / 100)" Color="Color.Success">Max</MudButton>
                            </MudStack>

                            <MudButton Color="Color.Success" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.CurrencyExchange" Disabled="PayoutAmount < 200">Udbetal penge</MudButton>

                            <MudStack Spacing="0">
                                <MudText Class="text-center" Typo="Typo.caption"><i>* Du kan minimum få udbetalt 20 DKK</i></MudText>
                                <MudText Class="text-center" Typo="Typo.caption"><i>* Der kan gå op til 7 dage før beløbet ankommer på din konto</i></MudText>
                            </MudStack>
                        }
                        else
                        {
                            <MudText>Udbetalingen på @PayoutAmount er nu oprettet (id: @Payout.Id)</MudText>
                            <MudText>Du kan se frem til en indbetaling på din konto @Payout.ArrivalDate*</MudText>
                            <MudText Typo="Typo.caption">* Ovenstående dato er en grov estimering; hav venligst tålmodighed, og tøv ikke med at kontakte os, hvis du er i tvivl om noget mht. udbetalinger.</MudText>
                        }
                    </MudStack> *@

                </NotAuthorized>
            </AuthorizeView>
        </div>
    }
</MudPaper>

<AuthorizeView Policy="IsNotStripeConnected">
    <NotAuthorized>
        @if (AccountPayouts is not null) 
        {
            <MudPaper Class="pa-4 mt-2">
                <MudStack Spacing="0">
                    <MudText Typo="Typo.h6">Tidligere udbetalinger</MudText>
                    <MudDataGrid Items="@AccountPayouts" Elevation="0" HorizontalScrollbar="false">
                        <Columns>
                            <PropertyColumn Property="x => x.Created" Title="Dato" Sortable="false" />
                            <PropertyColumn Context="entity" Property="x => x.Amount" Title="Beløb" Sortable="false">
                                <CellTemplate>
                                    <MudText>@(entity.Item.Amount / 100.0) @entity.Item.Currency.ToUpper()</MudText>
                                </CellTemplate>
                            </PropertyColumn>
                            <PropertyColumn Context="entity" Property="x => x.Status" Title="Status" Sortable="false">
                                <CellTemplate>
                                    @if (entity.Item.Status == "paid") 
                                    {
                                        <MudText Class="bg-green-500 w-fit px-2 text-white rounded-lg">@entity.Item.Status.ToUpper()</MudText>
                                    }
                                    else
                                    {
                                        <MudText Class="bg-red-500 w-fit px-2 text-white rounded-lg">@entity.Item.Status.ToUpper()</MudText>
                                    }
                                </CellTemplate>
                            </PropertyColumn>
                            <PropertyColumn Context="entity" Property="x => x.ArrivalDate" Title="Forventet ankomst" Sortable="false">
                                <CellTemplate>@entity.Item.ArrivalDate.ToString("dd-MM-yyyy")</CellTemplate>
                            </PropertyColumn>
                        </Columns>
                        <NoRecordsContent>
                            Det ser ikke ud til at vi har noget at vise her...
                        </NoRecordsContent>
                    </MudDataGrid>
                </MudStack>
            </MudPaper>

            <MudPaper Class="pa-4 mt-2">
                <MudStack Spacing="0">
                    <MudText Typo="Typo.h6">Overførsler</MudText>
                    <MudDataGrid Items="@Transfers" Elevation="0" HorizontalScrollbar="false">
                        <Columns>
                            <PropertyColumn Property="x => x.Created" Title="Dato" Sortable="false" />
                            <PropertyColumn Context="entity" Property="x => x.Amount" Title="Beløb" Sortable="false">
                                <CellTemplate>
                                    <MudText Class="bg-green-500 w-fit px-2 text-white rounded-lg">@(entity.Item.Amount / 100) @entity.Item.Currency.ToUpper()</MudText>
                                </CellTemplate>
                            </PropertyColumn>
                            <PropertyColumn Property="x => x.Description" Title="Beskrivelse" Sortable="false" />
                        </Columns>
                        <NoRecordsContent>
                            Det ser ikke ud til at vi har noget at vise her...
                        </NoRecordsContent>
                    </MudDataGrid>
                </MudStack>
            </MudPaper>
            @* 
            <MudButton OnClick="TestWithdrawal">Test udbetaling</MudButton>
            <MudButton OnClick="TestDeposit">Test Indbetaling</MudButton> *@
        }
    </NotAuthorized>
</AuthorizeView>

@code {
    private Creator? Creator;
    private Balance Balance;
    private Account Account;
    private IEnumerable<Transfer> Transfers = [];

    private IEnumerable<Payout> AccountPayouts;

    private string? StripeAccount;
    private Payout Payout;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var creatorId = authState.User.FindFirst(c => c.Type == "CreatorId")?.Value;
        StripeAccount = authState.User.FindFirst(c => c.Type == "StripeAccountId")?.Value;
        Creator = await Context.Creators
            .Include(x => x.User)
            .ThenInclude(x => x.Language)
            .AsSplitQuery()
            .SingleOrDefaultAsync(x => x.Id == Convert.ToInt32(creatorId));

        if (Creator is not null)
            Balance = await StripeService.GetBalance(StripeAccount);

        if (StripeAccount is not null) 
        {
            AccountPayouts = await StripeService.GetAccountPayouts(StripeAccount);
            Account = StripeService.GetAccount(StripeAccount);
            Transfers = await StripeService.GetAccountTransfers(StripeAccount);
        }
    }

    // private async Task TestWithdrawal() 
    // {
    //     await TransactionService.TakeFromBalance(Creator.BalanceId, 100, "Udbetaling", WCPShared.Models.Enums.TransactionType.Payout);
    //     StateHasChanged();
    // }

    // private async Task TestDeposit()
    // {
    //     await TransactionService.AddToBalance(Creator.BalanceId, 500, "Indbetaling", WCPShared.Models.Enums.TransactionType.IncomingTransfer);
    //     StateHasChanged();
    // }

    // private async Task StartPayout() 
    // {
    //     if (StripeAccount is not null) 
    //     {
    //         Payout = await StripeService.CreatePayout(StripeAccount, PayoutAmount);
    //         PayoutConfirmed = true;
    //     }
    // }
}
