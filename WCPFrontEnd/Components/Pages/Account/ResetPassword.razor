@using Microsoft.AspNetCore.WebUtilities
@using WCPShared.Interfaces
@using WCPShared.Interfaces.Auth
@using WCPShared.Models.Entities.UserModels
@using WCPShared.Services

@inject NavigationManager NavigationManager
@inject IWcpDbContext Context
@inject IAuthService AuthService
@page "/reset-password"

<div class="w-full flex justify-center align-items-center mt-16">
    <MudPaper Elevation="0" Class="border border-border max-w-[32em]">
        <MudText Typo="Typo.h6" Class="pa-4">Nulstil kodeord</MudText>
        <MudDivider />

        @if (User is not null && User.ResetTokenExpiry > DateTime.Now) 
        {
            <MudStack Class="pa-4">
                <MudTextField Label="Kodeord" Type="password" @bind-Value="Password" Variant="Variant.Outlined" />
                <MudTextField Label="Gentag kodeord" Type="password" @bind-Value="ConfirmPassword" Variant="Variant.Outlined" />
                <MudButton OnClick="Submit" Color="Color.Primary" Class="rounded-lg" Variant="Variant.Filled" DropShadow="false">Nulstil</MudButton>
            </MudStack>
        }
        else if (User is not null && User.ResetTokenExpiry < DateTime.Now)
        {
            <MudText Class="pa-4">Din token er forældet. Prøv at starte forfra...</MudText>
        }
        else 
        {
            <MudText Class="pa-4">Noget gik galt... Vi kan ikke genkende din token.</MudText>
        }
    </MudPaper>
</div>


@code {
    private string Password;
    private string ConfirmPassword;

    private User? User;

    protected override void OnInitialized()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);

        QueryHelpers.ParseQuery(uri.Query).TryGetValue("token", out var token);

        if (!string.IsNullOrEmpty(token)) 
        {
            User = Context.Users.SingleOrDefault(x => x.PasswordResetToken == token.ToString());
        }
    }

    public void Submit()
    {
        string passwordHash = BCrypt.Net.BCrypt.HashPassword(Password);
        User.PasswordHash = passwordHash;
        User.ResetTokenExpiry = null;
        User.PasswordResetToken = null;

        NavigationManager.NavigateTo("/login", forceLoad: true);
    }
}
