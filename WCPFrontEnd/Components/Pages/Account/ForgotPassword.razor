@inject IWcpDbContext Context
@inject IEmailService EmailService
@page  "/forgot-password"
@using System.Security.Cryptography
@using System.Net
@using WCPShared.Interfaces

<div class="w-full flex justify-center align-items-center mt-16">
    <MudPaper Elevation="0" Class="border border-border max-w-[32em]">
        <MudText Typo="Typo.h6" Class="pa-4">Glemt kodeord</MudText>
        <MudDivider />


        <MudStack Class="pa-4">
            @if (!EmailSent)
            {
                <MudTextField Label="Email" @bind-Value="Email" Variant="Variant.Outlined" />
                <MudButton OnClick="Submit" Color="Color.Primary" Class="rounded-lg" Variant="Variant.Filled" DropShadow="false">Send</MudButton>
                <MudText Color="Color.Error">@Error</MudText>
            }
            else
            {
                <MudText>Vi vil nu sende dig en email med at link til at nulstille din adgangskode.</MudText>
                <MudText>Hvis den ikke ankommer indenfor et par minutter, tjek venligst spam, og prøv igen...</MudText>
            }
        </MudStack>
    </MudPaper>
</div>


@code {
    private string Email = string.Empty;
    private bool EmailSent = false;
    private string Error = string.Empty;

    public async Task Submit() 
    {
        var user = Context.Users.SingleOrDefault(x => x.Email == Email);

        if (user is null) 
        {
            Error = "Vi fandt ikke nogen bruger med denne email";
            return;
        }

        var token = Convert.ToHexString(RandomNumberGenerator.GetBytes(64));
        user.PasswordResetToken = token;
        user.ResetTokenExpiry = DateTime.Now.AddMinutes(30);
        await Context.SaveChangesAsync();

        var status = await EmailService.SendForgotPasswordEmail(user, token, "test.wcp.dk");
        if (status == HttpStatusCode.Accepted)
            EmailSent = true;
    }
}
