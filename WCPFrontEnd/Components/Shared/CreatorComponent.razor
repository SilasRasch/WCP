@using WCPAdminFrontEnd.Services
@using WCPShared.Models.Entities
@using WCPShared.Models.Entities.UserModels
@using WCPShared.Models.Views

<MudStack Class="mud-secondary p-4 rounded-lg">
    <MudStack Row="true" Spacing="2" @onclick="() => OnExpandCollapseClick()">
        @if (!String.IsNullOrEmpty(Creator.ImgURL))
        {
            <MudImage Src="@Creator.ImgURL" Class="max-h-12 rounded-full" Alt="Creator profile pic"></MudImage>
        }
        <MudStack Spacing="0">
            <MudText Class="font-semibold">@Creator.User.Name</MudText>

            <MudStack Row="true" Spacing="1" AlignItems="AlignItems.Center"> 
                @if (Creator.DateOfBirth is not null)
                {
                    <MudText>@ProjectHelper.CalculateAge(Creator.DateOfBirth.Value) år</MudText>
                }
                @if (Creator.Gender is not null && Creator.Gender.ToLower() == "kvinde")
                {
                    @if (Creator.DateOfBirth is not null) 
                    {
                        <MudText>/</MudText>
                    }
                    <MudIcon Icon="@Icons.Material.Filled.Female" Size="Size.Small"></MudIcon>
                }
                else if (Creator.Gender is not null)
                {
                    @if (Creator.DateOfBirth is not null)
                    {
                        <MudText>/</MudText>
                    }
                    <MudIcon Icon="@Icons.Material.Filled.Male" Size="Size.Small"></MudIcon>
                }

                <MudText>/ @Creator.SubType</MudText>
            </MudStack>
        </MudStack>

        <MudSpacer></MudSpacer>

        <MudStack Row="true" Spacing="0" Justify="Justify.Center">
            @if (Addable)
            {
                <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Success" OnClick="() => AddCreator.InvokeAsync(Creator)"></MudIconButton>
            }
            @if (Participation is not null)
            {
                @if (Participation.HasDelivered)
                {
                    <MudIconButton Icon="@Icons.Material.Filled.CheckCircleOutline" Color="Color.Success"></MudIconButton>
                }
                else
                {
                    <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Error"></MudIconButton>
                }
                @if (Editable)
                {
                    <MudIconButton Icon="@Icons.Material.Filled.AttachMoney" Color="Color.Success" OnClick="ToggleSalaryInput"></MudIconButton>

                    <MudPopover Open="@_showSalary" AnchorOrigin="Origin.CenterLeft" TransformOrigin="Origin.CenterCenter" Class="px-4 pt-4">
                        <div class="d-flex flex-column">
                            <MudNumericField Label="Lønning" @bind-Value="Participation.Salary" Min="0" />
                            <MudButton OnClick="@ToggleSalaryInput" Class="ml-auto mr-n3 mb-1">Luk</MudButton>
                        </div>
                    </MudPopover>
                }
            }

            @if (Editable)
            {
                <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="() => RemoveCreator.InvokeAsync(Creator)"></MudIconButton>
            }
        </MudStack>
        
    </MudStack>

    <MudDivider />

    <MudCollapse Expanded="_expanded">
        @if (!String.IsNullOrEmpty(Creator.User.Name))
        {
            <MudStack Row="true" Spacing="1">
                <MudIcon Icon="@Icons.Material.Filled.Person"></MudIcon>
                <MudText>@Creator.User.Name</MudText>
            </MudStack>
        }

        @if (Creator.DateOfBirth is not null)
        {
            <MudStack Row="true" Spacing="1">
                <MudIcon Icon="@Icons.Material.Filled.Cake"></MudIcon>
                <MudText>@Creator.DateOfBirth.Value.ToString("d") (@ProjectHelper.CalculateAge(Creator.DateOfBirth.Value) år)</MudText>
            </MudStack>
        }

        @if (!String.IsNullOrEmpty(Creator.Gender))
        {
            <MudStack Row="true" Spacing="1">
                @if (Creator.Gender is not null && Creator.Gender.ToLower() == "kvinde")
                {
                    <MudIcon Icon="@Icons.Material.Filled.Female"></MudIcon>
                }
                else if (Creator.Gender is not null)
                {
                    <MudIcon Icon="@Icons.Material.Filled.Male"></MudIcon>
                }
                <MudText>@Creator.Gender</MudText>
            </MudStack>
        }

        @if (!String.IsNullOrEmpty(Creator.User.Email))
        {
            <MudStack Row="true" Spacing="1">
                <MudIcon Icon="@Icons.Material.Filled.Email"></MudIcon>
                <MudText>@Creator.User.Email</MudText>
            </MudStack>
        }

        @if (!String.IsNullOrEmpty(Creator.Address))
        {
            <MudStack Row="true" Spacing="1">
                <MudIcon Icon="@Icons.Material.Filled.House"></MudIcon>
                <MudText>@Creator.Address</MudText>
            </MudStack>
        }

        @if (!String.IsNullOrEmpty(Creator.User.Phone))
        {
            <MudStack Row="true" Spacing="1">
                <MudIcon Icon="@Icons.Material.Filled.Phone"></MudIcon>
                <MudText>@Creator.User.Phone</MudText>
            </MudStack>
        }

        @if (Creator.Languages is not null)
        {
            <div class="flex gap-1 items-center">
                <MudIcon Icon="@Icons.Material.Filled.Language"></MudIcon>
                <MudStack Row="true" Spacing="1">
                    @foreach (var lang in Creator.Languages)
                    {
                        <MudText Typo="Typo.h6">
                            @ProjectHelper.CountryStringToFlag(lang.Name)
                        </MudText>
                    }
                </MudStack>
            </div>
        }
    </MudCollapse>
</MudStack>

@code {
    [Parameter]
    public Creator Creator { get; set; }

    [Parameter]
    public CreatorParticipation? Participation { get; set; }

    [Parameter]
    public EventCallback<Creator> RemoveCreator { get; set; }

    [Parameter]
    public EventCallback<Creator> AddCreator { get; set; }

    [Parameter]
    public bool Editable { get; set; }

    [Parameter]
    public bool Addable { get; set; }

    bool _expanded = false;
    bool _showSalary = false;

    private void OnExpandCollapseClick()
    {
        _expanded = !_expanded;
    }

    private void ToggleSalaryInput() => _showSalary = !_showSalary;
}