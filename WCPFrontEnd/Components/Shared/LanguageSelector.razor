@using Microsoft.EntityFrameworkCore
@using WCPAdminFrontEnd.Services
@using WCPShared.Interfaces
@using WCPShared.Models.Entities.UserModels
@inject IWcpDbContextFactory ContextFactory

<MudSelect @bind-Value="Value" Text="@ProjectHelper.LanguageToStringFlag(Value)" Label="@Label"
Required="@Required" Placeholder="@Placeholder" RequiredError="Dette felt er påkrævet" AnchorOrigin="Origin.BottomCenter">
    @if (Languages is not null) 
    {
        foreach (var lang in Languages)
        {
            <MudSelectItem Value="@lang">@ProjectHelper.CountryStringToFlag(lang.IsoLanguageCode)</MudSelectItem>
        }
    }
</MudSelect>

@code {
    [Parameter]
    public Language Value
    {
        get => _value;
        set
        {
            if (_value == value) return;

            _value = value;
            ValueChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public string Placeholder { get; set; } = string.Empty;

    [Parameter]
    public bool Required { get; set; } = false;

    [Parameter]
    public string Label { get; set; } = "Sprog";

    [Parameter]
    public EventCallback<Language> ValueChanged { get; set; }

    private Language _value;

    public IEnumerable<Language> Languages { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using (IWcpDbContext context = ContextFactory.CreateDbContext()) 
        {
            Languages = await context.Languages.ToListAsync();
        }
    }
}
